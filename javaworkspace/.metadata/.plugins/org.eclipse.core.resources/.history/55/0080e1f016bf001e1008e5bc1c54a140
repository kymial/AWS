package ch03;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Random;
import java.util.Set;
import java.util.TreeSet;

public class B_Package2 {

	public static void main(String[] args) {
		
		// Math 클래스 : 수학 연산과 관련된 다양한 메서드를 제공해주는 클래스
		
		// 절대값 메서드 : abs()
		System.out.println(Math.abs(-10.888)); // 결과값 10
		
		// *올림값 메서드 : ceil()
		System.out.println(Math.ceil(3.14)); // 결과값 4
		
		// *내림값 메서드 : floor()
		System.out.println(Math.floor(3.14)); // 결과값 3
		
		// *반올림 메서드 : round()
		System.out.println(Math.round(3.14)); // 결과값 3
		System.out.println(Math.round(3.55)); // 결과값 4
		
		// 특정 소수점 자리수에서 올림, 내림, 반올림
		System.out.println(Math.round( 3.1415 * 100) / 100.0); // 소수점 세번째 자리에서 반올림 ( 라운드에서 314으로 만들고 그 수식을 끝낸 뒤에 다시 100으로 나누면 3.14 결과가 나옴)
		System.out.println(Math.ceil(3.1415 * 100) / 100.0);
		System.out.println(Math.floor(3.1415 * 100) / 100.0);
		
		// 최소값 메서드 : min()
		System.out.println(Math.min(10, 20)); // 결과값 10
		
		// 최대값 메서드 : max()
		System.out.println(Math.max(10, 20)); // 결과값 20
		
		// 거듭제곱값 메서드 : pow()
		System.out.println(Math.pow(10, 3)); // 결과값 1000
		
		// 제곱근값 메서드 : sqrt()
		System.out.println(Math.sqrt(100)); // 결과값 10.0
		
		
		// Random 클래스 : 난수를 생성해주는 클래스
		Random random = new Random();
		System.out.println(random.nextInt());
		
		// 범위 제약
		System.out.println(random.nextInt(45)); // 0 ~ 44까지 나옴
		System.out.println(random.nextInt() % 45); // -44 ~ 44까지 나옴
		
		
		// Lotto : 1 ~ 45, 중복 없는 6개의 수
		
		for (int count = 0; count <5; count++) {
		Set<Integer> lotto = new TreeSet<>();
		
		while (lotto.size()<6){
		int number = random.nextInt(45) + 1;
		lotto.add(number);
		}
		System.out.println(lotto);
		}
		
		
		System.out.println("");
		System.out.println("=============================================");
		System.out.println("");
		
		// 연금복권 : 1~5조 0~9 중복허용한 6자리수 ex) 5조 588526
		
//		for (int counta = 0; counta <5; counta++) {
		List<Integer> annuity = new ArrayList<>();
		
		int jo = random.nextInt(5)+1;
		annuity.add(jo);
		for ( int count = 0; count<6; count ++) {
		int number = random.nextInt(10);
		annuity.add(number);
		}
		
		System.out.println(annuity);
		
//		}
		
		System.out.println("");
		System.out.println("=============================================");
		System.out.println("");
		
		
		// Date 클래스 : 날짜를 다루는 클래스
		// Date 클래스의 대부분의 메서드는 JDK 1.1부터 사용하지 않도록 권장하고 잇음
		Date dateNow = new Date();
		System.out.println(dateNow);
//		System.out.println(dateNow.getDate());
		
		
		System.out.println("");
		System.out.println("=============================================");
		System.out.println("");
		
		
		// LocalDateTime 클래스 : JAVA 8 버전 이후부터 Date 클래스를 대체하기 위해 만들어진 클래스
		// LocalDate 클래스, LocalTime 클래스, LocalDateTime 클래스
		
		// 현재 날짜 및 시간의 인스턴스 생성
		LocalDateTime now = LocalDateTime.now();
		System.out.println(now);
		
		// 특정 날짜 및 시간의 인스턴스 생성
		LocalDateTime date1 = LocalDateTime.of(2024, 1, 18, 9, 0, 0);
		System.out.println(date1);
		
		// 특정 요소 가져오기 getXXX()
		int year = now.getYear();
		System.out.println(year + " 년");
		
		int month = now.getMonthValue();
		System.out.println(month + " 월");
		
		int day = now.getDayOfMonth();
		System.out.println(day + " 일");
		
		// 특정 요소 변경하기 withXXX
		now = now.withYear(2025);
		System.out.println(now);
		
		
		
		
		
		
	}

}
